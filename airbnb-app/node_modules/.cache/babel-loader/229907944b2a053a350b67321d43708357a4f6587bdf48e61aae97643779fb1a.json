{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Development\\\\airbnb\\\\airbnb-app\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  async function registerUser(ev) {\n    ev.preventDefault();\n    try {\n      await axios.post(\"/register\", {\n        name,\n        email,\n        password\n      });\n      alert(\"Registeration successfull\");\n    } catch (error) {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 grow flex items-center justify-around\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-64\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl text-center mb-4\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"max-w-md mx-auto\",\n        onSubmit: registerUser,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Shashank\",\n          value: name,\n          onChange: ev => setName(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Your@email.com\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-2 text-gray-500\",\n          children: [\"Already a member ?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"underline text-black\",\n            children: \"Login Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"U1DCtFSIKcmCKgpSr3L7jOg/618=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","Link","axios","jsxDEV","_jsxDEV","RegisterPage","_s","name","setName","email","setEmail","password","setPassword","registerUser","ev","preventDefault","post","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","e","to","_c","$RefreshReg$"],"sources":["D:/Programming/Development/airbnb/airbnb-app/src/pages/Register.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function RegisterPage() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  async function registerUser(ev) {\r\n    ev.preventDefault();\r\n\r\n    try {\r\n        await axios.post(\"/register\", {\r\n            name,\r\n            email,\r\n            password,\r\n          });\r\n          alert(\"Registeration successfull\");\r\n    } catch (error) {\r\n        \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-4 grow flex items-center justify-around\">\r\n      <div className=\"mb-64\">\r\n        <h1 className=\"text-4xl text-center mb-4\">Register</h1>\r\n        <form className=\"max-w-md mx-auto\" onSubmit={registerUser}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Shashank\"\r\n            value={name}\r\n            onChange={(ev) => setName(ev.target.value)}\r\n          />\r\n\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Your@email.com\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <button className=\"primary\">Register</button>\r\n          <div className=\"text-center py-2 text-gray-500\">\r\n            Already a member ?{\" \"}\r\n            <Link to={\"/login\"} className=\"underline text-black\">\r\n              Login Now\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}